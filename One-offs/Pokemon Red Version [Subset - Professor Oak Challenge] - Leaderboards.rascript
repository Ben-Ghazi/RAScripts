// Pokemon Red Version [Subset - Professor Oak Challenge]
// #ID = 16084

pokedex =
{
    "Bulbasaur":bit0(0xd2f7),
    "Ivysaur":bit1(0xd2f7),
    "Venusaur":bit2(0xd2f7),
    "Charmander":bit3(0xd2f7),
    "Charmeleon":bit4(0xd2f7),
    "Charizard":bit5(0xd2f7),
    "Squirtle":bit6(0xd2f7),
    "Wartortle":bit7(0xd2f7),
    "Blastoise":bit0(0xd2f8),
    "Caterpie":bit1(0xd2f8),
    "Metapod":bit2(0xd2f8),
    "Butterfree":bit3(0xd2f8),
    "Weedle":bit4(0xd2f8),
    "Kakuna":bit5(0xd2f8),
    "Beedrill":bit6(0xd2f8),
    "Pidgey":bit7(0xd2f8),
    "Pidgeotto":bit0(0xd2f9),
    "Pidgeot":bit1(0xd2f9),
    "Rattata":bit2(0xd2f9),
    "Raticate":bit3(0xd2f9),
    "Spearow":bit4(0xd2f9),
    "Fearow":bit5(0xd2f9),
    "Ekans":bit6(0xd2f9), // Red Only
    "Arbok":bit7(0xd2f9), // Red Only
    "Pikachu":bit0(0xd2fa),
    "Raichu":bit1(0xd2fa),
    "Sandshrew":bit2(0xd2fa), // Blue Only
    "Sandslash":bit3(0xd2fa), // Blue Only
    "NidoranF":bit4(0xd2fa),
    "Nidorina":bit5(0xd2fa),
    "Nidoqueen":bit6(0xd2fa),
    "NidoranM":bit7(0xd2fa),
    "Nidorino":bit0(0xd2fb),
    "Nidoking":bit1(0xd2fb),
    "Clefairy":bit2(0xd2fb),
    "Clefable":bit3(0xd2fb),
    "Vulpix":bit4(0xd2fb), // Blue Only
    "Ninetales":bit5(0xd2fb), // Blue Only
    "Jigglypuff":bit6(0xd2fb),
    "Wigglytuff":bit7(0xd2fb),
    "Zubat":bit0(0xd2fc),
    "Golbat":bit1(0xd2fc),
    "Oddish":bit2(0xd2fc), // Red Only
    "Gloom":bit3(0xd2fc), // Red Only
    "Vileplume":bit4(0xd2fc), // Red Only
    "Paras":bit5(0xd2fc),
    "Parasect":bit6(0xd2fc),
    "Venonat":bit7(0xd2fc),
    "Venomoth":bit0(0xd2fd),
    "Diglett":bit1(0xd2fd),
    "Dugtrio":bit2(0xd2fd),
    "Meowth":bit3(0xd2fd), // Blue Only
    "Persian":bit4(0xd2fd), // Blue Only
    "Psyduck":bit5(0xd2fd),
    "Golduck":bit6(0xd2fd),
    "Mankey":bit7(0xd2fd), // Red Only
    "Primeape":bit0(0xd2fe), // Red Only
    "Growlithe":bit1(0xd2fe), // Red Only
    "Arcanine":bit2(0xd2fe), // Red Only
    "Poliwag":bit3(0xd2fe),
    "Poliwhirl":bit4(0xd2fe),
    "Poliwrath":bit5(0xd2fe),
    "Abra":bit6(0xd2fe),
    "Kadabra":bit7(0xd2fe),
    "Alakazam":bit0(0xd2ff), // Trade Only
    "Machop":bit1(0xd2ff),
    "Machoke":bit2(0xd2ff),
    "Machamp":bit3(0xd2ff), // Trade Only
    "Bellsprout":bit4(0xd2ff), // Blue Only
    "Weepinbell":bit5(0xd2ff), // Blue Only
    "Victreebel":bit6(0xd2ff), // Blue Only
    "Tentacool":bit7(0xd2ff),
    "Tentacruel":bit0(0xd300),
    "Geodude":bit1(0xd300),
    "Graveler":bit2(0xd300),
    "Golem":bit3(0xd300), // Trade Only
    "Ponyta":bit4(0xd300),
    "Rapidash":bit5(0xd300),
    "Slowpoke":bit6(0xd300),
    "Slowbro":bit7(0xd300),
    "Magnemite":bit0(0xd301),
    "Magneton":bit1(0xd301),
    "Farfetch'd":bit2(0xd301),
    "Doduo":bit3(0xd301),
    "Dodrio":bit4(0xd301),
    "Seel":bit5(0xd301),
    "Dewgong":bit6(0xd301),
    "Grimer":bit7(0xd301),
    "Muk":bit0(0xd302),
    "Shellder":bit1(0xd302),
    "Cloyster":bit2(0xd302),
    "Gastly":bit3(0xd302),
    "Haunter":bit4(0xd302),
    "Gengar":bit5(0xd302), // Trade
    "Onix":bit6(0xd302),
    "Drowzee":bit7(0xd302),
    "Hypno":bit0(0xd303),
    "Krabby":bit1(0xd303),
    "Kingler":bit2(0xd303),
    "Voltorb":bit3(0xd303),
    "Electrode":bit4(0xd303),
    "Exeggcute":bit5(0xd303),
    "Exeggutor":bit6(0xd303),
    "Cubone":bit7(0xd303),
    "Marowak":bit0(0xd304),
    "Hitmonlee":bit1(0xd304),  // Choice
    "Hitmonchan":bit2(0xd304), // Choice
    "Lickitung":bit3(0xd304),
    "Koffing":bit4(0xd304),
    "Weezing":bit5(0xd304),
    "Rhyhorn":bit6(0xd304),
    "Rhydon":bit7(0xd304),
    "Chansey":bit0(0xd305),
    "Tangela":bit1(0xd305),
    "Kangaskhan":bit2(0xd305),
    "Horsea":bit3(0xd305),
    "Seadra":bit4(0xd305),
    "Goldeen":bit5(0xd305),
    "Seaking":bit6(0xd305),
    "Staryu":bit7(0xd305),
    "Starmie":bit0(0xd306),
    "MrMime":bit1(0xd306),
    "Scyther":bit2(0xd306), // Red Only
    "Jynx":bit3(0xd306),
    "Electabuzz":bit4(0xd306), // Red Only
    "Magmar":bit5(0xd306), // Blue Only
    "Pinsir":bit6(0xd306), // Blue Only
    "Tauros":bit7(0xd306),
    "Magikarp":bit0(0xd307),
    "Gyarados":bit1(0xd307),
    "Lapras":bit2(0xd307),
    "Ditto":bit3(0xd307),
    "Eevee":bit4(0xd307),
    "Vaporeon":bit5(0xd307), // Choice
    "Jolteon":bit6(0xd307), // Choice
    "Flareon":bit7(0xd307), // Choice
    "Porygon":bit0(0xd308),
    "Omanyte":bit1(0xd308), // Choice
    "Omastar":bit2(0xd308), // Choice
    "Kabuto":bit3(0xd308), // Choice
    "Kabutops":bit4(0xd308), // Choice
    "Aerodactyl":bit5(0xd308),
    "Snorlax":bit6(0xd308),
    "Articuno":bit7(0xd308),
    "Zapdos":bit0(0xd309),
    "Moltres":bit1(0xd309),
    "Dratini":bit2(0xd309),
    "Dragonair":bit3(0xd309),
    "Dragonite":bit4(0xd309),
    "Mewtwo":bit5(0xd309),
    "Mew":bit6(0xd309) // Unobtainable
}

Character_on_Map = byte(0xcfcb)
    No = 0x00
    Yes = 0x01

Time_Frames = byte(0xda45)
Seconds = byte(0xda44)
Minutes = byte(0xda43)
Hours = byte(0xda41)

function Badges() => byte(0xd356)

Boulder_Badge_Obtained = bit0(0xd356)
Cascade_Badge_Obtained = bit1(0xd356)
Thunder_Badge_Obtained = bit2(0xd356)
Rainbow_Badge_Obtained = bit3(0xd356)
Soul_Badge_Obtained = bit4(0xd356)
Marsh_Badge_Obtained = bit5(0xd356)
Volcano_Badge_Obtained = bit6(0xd356)
Earth_Badge_Obtained = bit7(0xd356)

function Map() => byte(0xd35e)
    Oaks = 0x28
    Brock = 0x36
    Misty = 0x41
    Spearow = 0xc4
    Mime = 0x30
    Karp = 0x44
    Eevee = 0x84
    Casino = 0x89
    Jynx = 0x3f
    Lick = 0xbf
    Koga = 0x9d
    Fossil = 0xaa
    Erica = 0x86
    Surge = 0x5c
    Sabrina = 0xb2
    Blaine = 0xa6
    Giovanni = 0x2d
    Rival = 0x78
    Champ = 0x76
    Mewtwo = 0xe3
    Lapras = 0xd4
    Tangela = 0xa8

function Farfetch() => bit4(0xd737)
function MrMime() => bit1(0xd737)
function Lick() => bit5(0xd737)
function Karp() => bit7(0xd7c6)
function Jynx() => bit6(0xd737)
function Lapras() => bit0(0xd72e)
function Eevee() => bit5(0xd5ae)
function Hitmonlee() => bit6(0xd7b1)
function Hitmonchan() => bit7(0xd7b1)
function Tangela() => bit0(0xd738)

Badges =
{
    "Brock":bit0(0xd356),
    "Misty":bit1(0xd356),
    "LtSurge":bit2(0xd356),
    "Erika":bit3(0xd356),
    "Koga":bit4(0xd356),
    "Sabrina":bit5(0xd356),
    "Blaine":bit6(0xd356),
    "Giovanni":bit7(0xd356)
}

function Slot1() => byte(0xd164)
Bulbasaur = 0x99
Squirtle = 0xb1
Charmander = 0xb0
None = 0xff

function Caught() => byte(0xcd3d)
function Evo() => byte(0xceec) == 0x00
function LearnEvo() => byte(0xceec)
function Catch() => prior(Caught()) == 0x01

function Slot1() => byte(0xd164)
function Slot2() => byte(0xd165)
function Slot3() => byte(0xd166)
function Slot4() => byte(0xd167)
function Slot5() => byte(0xd168)
function Slot6() => byte(0xd169)

function choosestarter() => (always_false() || Slot1() == Bulbasaur && prev(Slot1()) == None || Slot1() == Charmander && prev(Slot1()) == None|| Slot1() == Squirtle && prev(Slot1()) == None)

function First() =>   pokedex["Pidgey"]+pokedex["Pidgeotto"]+pokedex["Pidgeot"]+pokedex["Rattata"]+pokedex["Raticate"]+
                      pokedex["Spearow"]+pokedex["Fearow"]+pokedex["NidoranF"]+pokedex["Nidorina"]+pokedex["NidoranM"]+
                      pokedex["Nidorino"]+pokedex["Caterpie"]+pokedex["Metapod"]+pokedex["Butterfree"]+pokedex["Weedle"]+
                      pokedex["Kakuna"]+pokedex["Beedrill"]+pokedex["Pikachu"] // 0x12 -- Before First Badge

function Squirtle() => pokedex["Squirtle"]+pokedex["Wartortle"]+pokedex["Blastoise"] // Before First Badge
function Charmander() => pokedex["Charmander"]+pokedex["Charmeleon"]+pokedex["Charizard"] // Before First Badge
function Bulbasaur() => pokedex["Bulbasaur"]+pokedex["Ivysaur"]+pokedex["Venusaur"] // Before First Badge

function Second() =>  pokedex["Jigglypuff"]+pokedex["Magikarp"]+pokedex["MrMime"]+
                      pokedex["Gyarados"]+pokedex["Clefairy"]+pokedex["Zubat"]+pokedex["Golbat"]+pokedex["Paras"]+
                      pokedex["Parasect"]+pokedex["Geodude"]+pokedex["Graveler"]+pokedex["Abra"]+pokedex["Kadabra"]+
                      pokedex["Farfetch'd"]+pokedex["Drowzee"]+pokedex["Hypno"]+pokedex["Diglett"]+pokedex["Dugtrio"] // 0x11 -- Before Second Badge
                      
function Red1() => pokedex["Ekans"]+pokedex["Arbok"]+pokedex["Oddish"]+pokedex["Gloom"]+pokedex["Mankey"]+pokedex["Primeape"] // Before Second Badge

function Moon1() => pokedex["Nidoqueen"]+pokedex["Nidoking"]+pokedex["Wigglytuff"]+pokedex["Clefable"] // Before Second Badge

function Third() => pokedex["Voltorb"]+pokedex["Electrode"]+pokedex["Onix"]+pokedex["Machop"]+pokedex["Machoke"]+
                    pokedex["Ninetales"]+pokedex["Eevee"]+pokedex["Gastly"]+pokedex["Haunter"]+pokedex["Cubone"]+pokedex["Marowak"]+
                    pokedex["Snorlax"]+pokedex["Venonat"]+pokedex["Venomoth"]+pokedex["Ditto"]+pokedex["Exeggcute"]+pokedex["Exeggutor"]+
                    pokedex["Rhyhorn"]+pokedex["Rhydon"]+pokedex["Chansey"]+pokedex["Kangaskhan"]+pokedex["Tauros"]+pokedex["Slowpoke"]+
                    pokedex["Slowbro"]+pokedex["Dratini"]+pokedex["Dragonair"]+pokedex["Dragonite"]+pokedex["Doduo"]+pokedex["Dodrio"]+
                    pokedex["Goldeen"]+pokedex["Seaking"]+pokedex["Krabby"]+pokedex["Kingler"]+pokedex["Shellder"]+pokedex["Cloyster"]+
                    pokedex["Poliwag"]+pokedex["Poliwhirl"]+pokedex["Poliwrath"]+pokedex["Tentacool"]+pokedex["Tentacruel"]+
                    pokedex["Horsea"]+pokedex["Seadra"]+pokedex["Staryu"]+pokedex["Starmie"]+pokedex["Psyduck"]+pokedex["Golduck"]+
                    pokedex["Jynx"]+pokedex["Raichu"]+pokedex["Lickitung"]+pokedex["Porygon"]+pokedex["Lapras"] // 0x37-- Before Third Badge

function Red2() => pokedex["Scyther"]+pokedex["Vileplume"]+pokedex["Growlithe"]+pokedex["Arcanine"] // Before Third Badge

function ChanLee() => pokedex["Hitmonchan"]+pokedex["Hitmonlee"] // Before Third Badge
function eevee() => pokedex["Jolteon"]+pokedex["Vaporeon"]+pokedex["Flareon"] // before Third Badge

function Fourth() => pokedex["Ponyta"]+pokedex["Rapidash"]+pokedex["Magnemite"]+pokedex["Magneton"]+pokedex["Seel"]+
                     pokedex["Dewgong"]+pokedex["Grimer"]+pokedex["Muk"]+pokedex["Koffing"]+pokedex["Weezing"]+
                     pokedex["Tangela"]+pokedex["Aerodactyl"]+pokedex["Zapdos"]+pokedex["Electabuzz"]+pokedex["Omanyte"]+
                     pokedex["Omastar"]+pokedex["Kabuto"]+pokedex["Kabutops"]

//---------- LEADERBOARDS ----------\\

leaderboard
(
    title = "Boulder Badge Speedrun",
    description = "Obtain the Boulder Badge with all 21 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Boulder_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Boulder_Badge_Obtained == Yes && First() + Squirtle() + Bulbasaur() + Charmander() != 21,
    submit = Map() == Brock && Boulder_Badge_Obtained > prev(Boulder_Badge_Obtained) && First() + Squirtle() + Bulbasaur() + Charmander() == 21,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)


leaderboard
(
    title = "Cascade Badge Speedrun",
    description = "Obtain the Cascade Badge with all 47 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Boulder_Badge_Obtained == Yes && Cascade_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Cascade_Badge_Obtained == Yes && First() + Second() + Red1() + pokedex["Nidoqueen"] + pokedex["Nidoking"] + pokedex["Clefable"] + pokedex["Wigglytuff"] + Squirtle() + Bulbasaur() + Charmander() != 47,
    submit = Map() == Misty && Cascade_Badge_Obtained > prev(Cascade_Badge_Obtained) && First() + Second() + Red1() + pokedex["Nidoqueen"] + pokedex["Nidoking"] + pokedex["Clefable"] + pokedex["Wigglytuff"] + Squirtle() + Bulbasaur() + Charmander() == 47,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Soul Badge Speedrun",
    description = "Obtain the Soul Badge with all 105 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Cascade_Badge_Obtained == Yes && Soul_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Soul_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Squirtle() + Bulbasaur() + Charmander() != 105,
    submit = Map() == Koga && Soul_Badge_Obtained > prev(Soul_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Squirtle() + Bulbasaur() + Charmander() == 105,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Rainbow Badge Speedrun",
    description = "Obtain the Rainbow Badge with all 121 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Soul_Badge_Obtained == Yes && Rainbow_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Rainbow_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + Squirtle() + Bulbasaur() + Charmander() != 121,
    submit = Map() == Erica && Rainbow_Badge_Obtained > prev(Rainbow_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + Squirtle() + Bulbasaur() + Charmander() == 121,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Thunder Badge Speedrun",
    description = "Obtain the Thunder Badge with all 122 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Rainbow_Badge_Obtained == Yes && Thunder_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Thunder_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() != 122,
    submit = Map() == Surge && Thunder_Badge_Obtained > prev(Thunder_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() == 122,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Marsh Badge Speedrun",
    description = "Obtain the Marsh Badge with all 122 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Thunder_Badge_Obtained == Yes && Marsh_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Marsh_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() != 122,
    submit = Map() == Sabrina && Marsh_Badge_Obtained > prev(Marsh_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() == 122,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Volcano Badge Speedrun",
    description = "Obtain the Volcano Badge with all 122 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Marsh_Badge_Obtained == Yes && Volcano_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Volcano_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() != 122,
    submit = Map() == Blaine && Volcano_Badge_Obtained > prev(Volcano_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() == 122,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Earth Badge Speedrun",
    description = "Obtain the Earth Badge with all 122 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Volcano_Badge_Obtained == Yes && Earth_Badge_Obtained == No,
    cancel = Character_on_Map == No && Time_Frames == 0 || Earth_Badge_Obtained == Yes && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() != 122,
    submit = Map() == Giovanni && Earth_Badge_Obtained > prev(Earth_Badge_Obtained) && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + Squirtle() + Bulbasaur() + Charmander() == 122,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Elite Four Speedrun",
    description = "Obtain the Earth Badge with all 123 possible pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Earth_Badge_Obtained == Yes,
    cancel = Character_on_Map == No && Time_Frames == 0 || prev(Map()) == Rival && Map() == Champ && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + pokedex["Moltres"] + Squirtle() + Bulbasaur() + Charmander() != 123,
    submit = prev(Map()) == Rival && Map() == Champ && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + pokedex["Moltres"] + Squirtle() + Bulbasaur() + Charmander() == 123,
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)

leaderboard
(
    title = "Professor Oak Challenge Speedrun",
    description = "Capture every single pokemon as quickly as possible.",
    start  = Character_on_Map == Yes && Time_Frames != 0 && Earth_Badge_Obtained == Yes && Map() == Mewtwo,
    cancel = Character_on_Map == No && Time_Frames == 0 || First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + pokedex["Moltres"] + Squirtle() + Bulbasaur() + Charmander() != 123 && pokedex["Mewtwo"] > prev(pokedex["Mewtwo"]) && Catch(),
    submit = Map() == Mewtwo && First() + Second() + Third() + Red1() + Red2() + ChanLee() + eevee() + Moon1() + Fourth() + pokedex["Articuno"] + pokedex["Moltres"] + Squirtle() + Bulbasaur() + Charmander() == 123 && pokedex["Mewtwo"] > prev(pokedex["Mewtwo"]) && Catch(),
    value = Time_Frames + (Seconds * 60) + (Minutes * 3600) + (Hours * 216000),
    format = "FRAMES",
    lower_is_better = true
)
